# -*- coding: utf-8 -*-
"""maina1q1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oV8622a_1riKbbzL3-amdiDIwml5v26o
"""

import cv2
import numpy as np
from matplotlib import pyplot as plt

img = cv2.imread("Histogram_Equalization_Theory_0.jpg",-1)
#the flag is set to a value -1 because the image loaded here is in grey scale on itself
#the flaf value can be set to "0" to load image as a grey scale image

hist,bins = np.histogram(img.flatten(),256,[0,256])

cdf = hist.cumsum()

cdf_normalized = cdf * hist.max()/ cdf.max()

plt.plot(cdf_normalized, color = 'b')
plt.hist(img.flatten(),256,[0,256], color = 'r')
plt.xlim([0,256])
plt.legend(('cdf','histogram'), loc = 'upper left')
plt.show()

cdf_m = np.ma.masked_equal(cdf,0)
cdf_m = (cdf_m - cdf_m.min())*255/(cdf_m.max()-cdf_m.min())
cdf = np.ma.filled(cdf_m,0).astype('uint8')

img2 = cdf[img]


hist,bins = np.histogram(img2.flatten(),256,[0,256])

cdf = hist.cumsum()
cdf_normalized = cdf * hist.max()/ cdf.max()

plt.plot(cdf_normalized, color = 'b')
plt.hist(img2.flatten(),256,[0,256], color = 'r')
plt.xlim([0,256])
plt.legend(('cdf','histogram'), loc = 'upper left')
plt.show()

plt.subplot(2,2,1),plt.imshow(img,cmap = 'gray')
plt.title('Original'), plt.xticks([]), plt.yticks([])
plt.subplot(2,2,2),plt.imshow(img2,cmap = 'gray')
plt.title('Histogram equalized'), plt.xticks([]), plt.yticks([])
plt.show()