# -*- coding: utf-8 -*-
"""mainb1q1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xoIubasukmqp5Yjepm0cxitESo1MdGKE
"""

import cv2
import numpy as np
from matplotlib import pyplot as plt

img = cv2.imread ("SanFrancisco.jpg")

gray1 = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
(a,b)=gray1.shape

sx=np.array([[-1,-2,-1],[0,0,0],[1,2,1]])
#filter along x direction
sy=np.array([[-1,0,1],[-2,0,2],[-1,0,1]])
#filter along y direction

#filters are of size 3X3

#convolution witout any built-in packages 
pad=np.zeros((a+2,b+2))

for i in range(1,a+1):
  for j in range(1,b+1):
    pad[i,j]=gray1[i-1,j-1]
#padding is done

lf=[]
for p in range(a):
  lt=[]
  for q in range(b):
    lt.append(np.sum(pad[p:p+3,q:q+3]*sx))
    #convolution main step
  lf.append(lt)
gx=np.array(lf)
#gradient along x-direction

lf=[]
for p in range(a):
  lt=[]
  for q in range(b):
    lt.append(np.sum(pad[p:p+3,q:q+3]*sy))
    #convolution main step
  lf.append(lt)
gy=np.array(lf)
#gradient along y-direction

plt.subplot(2,2,1),plt.imshow(gray1,cmap = 'gray')
plt.title('Original'), plt.xticks([]), plt.yticks([])
plt.subplot(2,2,2),plt.imshow(gx,cmap="gray")
plt.title('gradient_along_x'), plt.xticks([]), plt.yticks([])
plt.subplot(2,2,3),plt.imshow(gy,cmap="gray")
plt.title('gradient_along_y'), plt.xticks([]), plt.yticks([])
plt.show()